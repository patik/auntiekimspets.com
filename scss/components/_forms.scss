//
// Forms
// --------------------------------------------------
    // GENERAL STYLES
// --------------

// Make all forms have space below them
form {
    margin: 0 0 $baseLineHeight;
}

fieldset {
    padding: 0;
    margin: 0;
    border: none;
}

// Groups of fields with labels on top (legends)
legend,
fieldset legend {
    display: block;
    width: 100%;
    padding: 0;
    margin-bottom: $baseLineHeight;
    font-size: $baseFontSize * 1.5;
    line-height: $baseLineHeight * 2;
    color: $grayDark;
    @include font-bold();
    border: 0;
    border-bottom: 1px solid #e5e5e5;
    background: transparent;

    small {
        font-size: $baseLineHeight * .75;
        color: $grayLight;
    }
}

// Set font for forms
label,
input,
button,
select,
textarea {
    font-size: 16px;
    line-height: $baseLineHeight;
}

input,
button,
select,
textarea {
    @include font-sans(); // And only set font-family here for those that need it (note the missing label element)
    @include border-radius($baseBorderRadius);
}

// Identify controls by their labels
label {
    display: block;
    margin-bottom: 5px;
}

// Form controls
// -------------------------

// Shared size and type resets
select,
textarea,
button,
input,
// Need to list all of these types to override Foundation's specificity
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"] {
    display: inline-block;
    padding: 4px 6px;
    font-family: $font-sans;
    font-size: 16px; // Prevents iOS from zooming in when an input gains focus
    line-height: $baseLineHeight;
    @include border-radius($inputBorderRadius);
    vertical-align: middle;
    color: $gray;
}

// Reset height since textareas have rows
textarea {
    height: auto;
}

// Everything else
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.uneditable-input {
    background-color: $inputBackground;
    border: 1px solid $inputBorder;
    box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
    @include transition(border linear .2s, box-shadow linear .2s);

    // Focus state
    &:focus {
        border-color: rgba(82,168,236,.8);
        outline: 0;
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(82,168,236,.6);
    }

    @include enhance-with(ie9) {
        &:focus {
            outline: thin dotted; /* IE6-9 */
        }

        // input[type="radio"],
        // input[type="checkbox"] {
        //     margin-top: 1px;
        // }
    }

    @include enhance-with(lt-ie9) {
        &:focus {
            outline: thin dotted; /* IE6-9 */
        }

        // input[type="radio"],
        // input[type="checkbox"] {
        //     margin-top: 1px;
        // }
    }
}

// // Position radios and checkboxes better
// input[type="radio"],
// input[type="checkbox"] {
//     margin: 4px 0 0;
//     line-height: normal;
// }

select,
textarea,
button,
input,
// Need to list all of these types to override Foundation's specificity
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"] {
    font-family: $font-sans;
    font-size: 16px; // Prevents iOS from zooming in when an input gains focus
}

// Reset width of input images, buttons, radios, checkboxes
input[type="file"],
input[type="image"],
input[type="submit"],
input[type="reset"],
// input[type="radio"],
// input[type="checkbox"],
input[type="button"] {
    width: auto; // Override of generic input selector
}

input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button {
    -webkit-appearance: none;
}

// Set the height of select and file controls to match text inputs
select,
input[type="file"] {
    height: $inputHeight; /* In IE7, the height of the select element cannot be changed by height, only font-size */
    line-height: $inputHeight;
}

// Make select elements obey height by applying a border
select {
    width: 220px; // default input width + 10px of padding that doesn't get applied
    border: 1px solid $inputBorder;
    background-color: $inputBackground; // Chrome on Linux and Mobile Safari need background-color
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
    height: auto;
}

// Focus for select, file, radio, and checkbox
select:focus,
// input[type="radio"]:focus,
// input[type="checkbox"]:focus,
input[type="file"]:focus {
    @include tab-focus();
}

.prefix,
.postfix {
    font-size: 16px; // Foundation override
}

span.postfix {
    margin-left: -2px; // Cover border-radius of input field
    border-left: 1px solid #ccc; // Foundation override
    @include border-radius($inputBorderRadius);
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}


// // Grid style input sizes
// input[class*="small-"],
// input[class*="large-"],
// select[class*="small-"],
// select[class*="large-"],
// textarea[class*="small-"],
// textarea[class*="large-"],
// .uneditable-input[class*="small-"],
// .uneditable-input[class*="large-"],
// // Redeclare since the fluid row class is more specific
// .row input[class*="small-"],
// .row input[class*="large-"],
// .row select[class*="small-"],
// .row select[class*="large-"],
// .row textarea[class*="small-"],
// .row textarea[class*="large-"],
// .row .uneditable-input[class*="small-"],
// .row .uneditable-input[class*="large-"] {
//     float: none;
//     margin-left: 0;
// }
// // Ensure input-prepend/append never wraps
// .input-append input[class*="small-"],
// .input-append input[class*="large-"],
// .input-append .uneditable-input[class*="small-"],
// .input-append .uneditable-input[class*="large-"],
// .input-prepend input[class*="small-"],
// .input-prepend input[class*="large-"],
// .input-prepend .uneditable-input[class*="small-"],
// .input-prepend .uneditable-input[class*="large-"],
// .row input[class*="small-"],
// .row input[class*="large-"],
// .row select[class*="small-"],
// .row select[class*="large-"],
// .row textarea[class*="small-"],
// .row textarea[class*="large-"],
// .row .uneditable-input[class*="small-"],
// .row .uneditable-input[class*="large-"],
// .row .input-prepend [class*="small-"],
// .row .input-prepend [class*="large-"],
// .row .input-append [class*="small-"],
// .row .input-append [class*="large-"] {
//     display: inline-block;
// }

// // DISABLED STATE
// // --------------

// // Disabled and read-only inputs
// input[disabled],
// select[disabled],
// textarea[disabled],
// input[readonly],
// select[readonly],
// textarea[readonly] {
//     cursor: not-allowed;
//     background-color: $inputDisabledBackground;
// }
// // Explicitly reset the colors here
// input[type="radio"][disabled],
// input[type="checkbox"][disabled],
// input[type="radio"][readonly],
// input[type="checkbox"][readonly] {
//     background-color: transparent;
// }


// FORM FIELD FEEDBACK STATES
// --------------------------

// HTML5 invalid states
input:focus:invalid,
textarea:focus:invalid,
select:focus:invalid {
    color: $errorText;
    border-color: $buttonAlertBackground;
    &:focus {
        border-color: darken($buttonAlertBackground, 10%);
        box-shadow: 0 0 6px lighten($buttonAlertBackground, 20%);
    }
}


// // HELP TEXT
// // ---------

// .help-block,
// .help-inline {
//     color: lighten($textColor, 15%); // lighten the text some for contrast
// }

// .help-block {
//     display: block; // account for any element using help-block
//     margin-bottom: $baseLineHeight / 2;
// }

// .help-inline {
//     display: inline-block;
//     vertical-align: middle;
//     padding-left: 5px;
// }

// // INPUT GROUPS
// // ------------

// // Allow us to put symbols and text within the input field for a cleaner look
// .input-append,
// .input-prepend {
//     display: inline-block;
//     margin-bottom: $baseLineHeight / 2;
//     vertical-align: middle;
//     font-size: 0; // white space collapse hack
//     white-space: nowrap; // Prevent span and input from separating

// // Reset the white space collapse hack
//     input,
//     select,
//     .uneditable-input,
//     .dropdown-menu,
//     .popover {
//         font-size: $baseFontSize;
//     }

//     input,
//     select,
//     .uneditable-input {
//         position: relative; // placed here by default so that on :focus we can place the input above the .add-on for full border and box-shadow goodness
//         margin-bottom: 0; // prevent bottom margin from screwing up alignment in stacked forms
//         vertical-align: top;
//         @include border-radius(0 $inputBorderRadius $inputBorderRadius 0);

//         // Make input on top when focused so blue border and shadow always show
//         &:focus {
//             z-index: 2;
//         }
//     }

//     .add-on {
//         display: inline-block;
//         width: auto;
//         height: $baseLineHeight;
//         min-width: 16px;
//         padding: 4px 5px;
//         font-size: $baseFontSize;
//         font-weight: normal;
//         line-height: $baseLineHeight;
//         text-align: center;
//         text-shadow: 0 1px 0 $white;
//         background-color: $grayLighter;
//         border: 1px solid #ccc;
//     }

//     .add-on,
//     .button,
//     .button-group > .dropdown-toggle {
//         vertical-align: top;
//         @include border-radius(0);
//     }

//     .active {
//         background-color: lighten($green, 30);
//         border-color: $green;
//     }
// }

// .input-prepend {
//     .add-on,
//     .button {
//         margin-right: -1px;
//     }

//     .add-on:first-child,
//     .button:first-child {
//         // FYI, `.button:first-child` accounts for a button group that's prepended
//         @include border-radius($inputBorderRadius 0 0 $inputBorderRadius);
//     }
// }

// .input-append {
//     input,
//     select,
//     .uneditable-input {
//         @include border-radius($inputBorderRadius 0 0 $inputBorderRadius);

//         + .button-group .button:last-child {
//             @include border-radius(0 $inputBorderRadius $inputBorderRadius 0);
//         }
//     }

//     .add-on,
//     .button,
//     .button-group {
//         margin-left: -1px;
//     }

//     .add-on:last-child,
//     .button:last-child,
//     .button-group:last-child > .dropdown-toggle {
//         @include border-radius(0 $inputBorderRadius $inputBorderRadius 0);
//     }
// }

// // Remove all border-radius for inputs with both prepend and append
// .input-prepend.input-append {
//     input,
//     select,
//     .uneditable-input {
//         @include border-radius(0);
//         + .button-group .button {
//             @include border-radius(0 $inputBorderRadius $inputBorderRadius 0);
//         }
//     }
//     .add-on:first-child,
//     .button:first-child {
//         margin-right: -1px;
//         @include border-radius($inputBorderRadius 0 0 $inputBorderRadius);
//     }
//     .add-on:last-child,
//     .button:last-child {
//         margin-left: -1px;
//         @include border-radius(0 $inputBorderRadius $inputBorderRadius 0);
//     }
//     .button-group:first-child {
//         margin-left: 0;
//     }
// }

// // SEARCH FORM
// // -----------

// input.search-query {
//     padding-right: 14px;
//     padding-left: 14px;
//     margin-bottom: 0; // Remove the default margin on all inputs
//     @include border-radius(15px);
// }

// .ie9, .lt-ie9 {
//     input.search-query {
//         padding-right: 4px;
//         padding-left: 4px; /* IE7-8 doesn't have border-radius, so don't indent the padding */
//     }
// }

// div.switch > span {
//     box-shadow: 2px 0 10px 0 rgba(0, 0, 0, 0.07), 1000px 0 0 980px $successBackground, -2px 0 10px 0 rgba(0, 0, 0, 0.07), -1000px 0 0 1000px whitesmoke; // was #e1f5d1 on second one
// }

.resize-vertical {
    resize: vertical;
}

.horizontal-labels label {
    display: inline-block;

    & + label {
        margin-left: 0.5em;
    }
}
